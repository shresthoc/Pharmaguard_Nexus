version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - BLOCKCHAIN_NODE_URL
      - MONGO_URI
      - JWT_SECRET
    depends_on:
      - mongo
      - redis
      - kafka

  frontend:
    build: ./frontend
    ports:
      - "80:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000

  blockchain-node:
    image: hyperledger/fabric-peer:2.5
    environment:
      - CORE_PEER_ID=peer0.pharma.com
      - CORE_PEER_ADDRESS=peer0.pharma.com:7051
    volumes:
      - ./crypto:/etc/hyperledger/crypto
    ports:
      - "7051:7051"

  ai-service:
    build: ./ai-engine
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - ML_MODEL_PATH
      - KAFKA_BROKERS
    volumes:
      - ./ai-models:/models

  mongo:
    image: mongo:6.0
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"

  kafka:
    image: bitnami/kafka:3.4
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  mongo-data:
  redis-data:
  ai-models:
  grafana-data: